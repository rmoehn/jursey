;; act  … action
;; qa   … question-answer pair
;; ws   … workspace

;;;; agent

{:db/ident :agent/handle
 :db/valueType :db.type/string
 :db/unique :db.unique/identity
 :db/cardinality :db.cardinality/one}

{:db/ident :agent/root-ws
 :db/valueType :db.type/ref  ; ws
 :db/cardinality :db.cardinality/many}

;;;; ws

{:db/ident :ws/question
 :db/valueType :db.type/ref  ; hypertext
 :db/cardinality :db.cardinality/one}

{:db/ident :ws/answer
 :db/valueType :db.type/ref  ; hypertext
 :db/cardinality :db.cardinality/one}

{:db/ident :ws/sub-qa  ; qa
 :db/valueType :db.type/ref
 :db/isComponent true
 :db/cardinality :db.cardinality/many}

{:db/ident :ws/waiting-for
 :db/valueType :db.type/ref  ; ws
 :db/cardinality :db.cardinality/many}

;;;; qa

{:db/ident :qa/question
 :db/valueType :db.type/ref  ; hypertext
 :db/cardinality :db.cardinality/one}

{:db/ident :qa/answer
 :db/valueType :db.type/ref  ; pointer
 :db/cardinality :db.cardinality/one}

;;;; act

{:db/ident :act/command
 :db/valueType :db.type/ref  ; enum
 :db/cardinality :db.cardinality/one}

{:db/ident :act/content
 :db/valueType :db.type/ref  ; hypertext
 :db/cardinality :db.cardinality/one}

;;;; act.command

[:db/add #db/id[:db.part/user] :db/ident :act.command/ask]
[:db/add #db/id[:db.part/user] :db/ident :act.command/reply]
[:db/add #db/id[:db.part/user] :db/ident :act.command/unlock]
[:db/add #db/id[:db.part/user] :db/ident :act.command/reflect]

;;;; tx

{:db/ident :tx/ws
 :db/valueType :db.type/ref  ; ws
 :db/cardinality :db.cardinality/one}

{:db/ident :tx/act
 :db/valueType :db.type/ref  ; act
 :db/cardinality :db.cardinality/one}

;;;; hypertext

{:db/ident :hypertext/content
 :db/valueType :db.type/string  ; with embedded pointer names
 :db/cardinality :db.cardinality/one}

{:db/ident :hypertext/pointer
 :db/valueType :db.type/ref  ; pointer
 :db/isComponent true
 :db/cardinality :db.cardinality/many}

;;;; pointer

{:db/ident :pointer/name
 :db/valueType :db.type/string
 :db/cardinality :db.cardinality/one}

{:db/ident :pointer/target
 :db/valueType :db.type/ref  ; anything (?)
 :db/cardinality :db.cardinality/one}

{:db/ident :pointer/locked?
 :db/valueType :db.type/boolean
 :db/cardinality :db.cardinality/one}

;;;; answer pointer

{:db/ident :answer-pointer/locked?
 :db/valueType :db.type/boolean
 :db/cardinality :db.cardinality/one}

{:db/ident :answer-pointer/target
 :db/valueType :db.type/ref  ; hypertext
 :db/cardinality :db.cardinality/one}
